from diffusers import StableDiffusionPipeline
import torch
import os

class ImageGenerator:
    def __init__(self, model_name="CompVis/stable-diffusion-v1-4", device="cuda", output_dir="generated_images"):
        self.pipe = StableDiffusionPipeline.from_pretrained(model_name)
        self.pipe = self.pipe.to(device)
        self.output_dir = output_dir
        os.makedirs(self.output_dir, exist_ok=True)
        
    def generate_image(self, prompt, guidance_scale=7.5, num_inference_steps=50, width=512, height=512):
        with torch.no_grad():
            generator = torch.Generator("cuda").manual_seed(42)
            images = self.pipe(prompt, guidance_scale=guidance_scale, num_inference_steps=num_inference_steps,
                               generator=generator, width=width, height=height).images
        return images[0]
    
    def save_image(self, image, filename):
        image.save(os.path.join(self.output_dir, filename))

    def batch_generate_images(self, prompts, guidance_scale=7.5, num_inference_steps=50, width=512, height=512):
        for idx, prompt in enumerate(prompts):
            image = self.generate_image(prompt, guidance_scale, num_inference_steps, width, height)
            self.save_image(image, f"image_{idx}.png")
    
    def display_image(self, image):
        image.show()

generator = ImageGenerator()
prompts = ["a futuristic cityscape with flying cars", "a peaceful forest with a waterfall", 
           "a fantasy castle on a mountain", "a steampunk robot with gears and cogs"]

generator.batch_generate_images(prompts)
